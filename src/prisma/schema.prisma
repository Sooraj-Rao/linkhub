generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  avatar    String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)

  linkHubs  LinkHub[]

  @@map("users")
}

model LinkHub {
  id                 String   @id @default(cuid())
  userId             String
  name               String
  slug               String   @unique
  bio                String?
  avatar             String?
  theme              String   @default("modern")
  backgroundType     String?  @default("solid")
  backgroundColor    String?  @default("#080808")
  backgroundGradient String?
  backgroundImage    String?
  textColor          String?  @default("white")
  buttonStyle        String?  @default("10px")
  buttonColor        String?  @default("#0B0C0E")
  buttonTextColor    String?  @default("#ffffff")
  borderRadius       Int?     @default(12)
  shadowStyle        String?  @default("soft")
  isPersonal         Boolean  @default(false)
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  links Link[]

  @@map("link_hubs")
}

model Link {
  id          String   @id @default(cuid())
  linkHubId   String
  title       String
  url         String
  description String?
  icon        String?
  type        String   @default("link")
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  clicks      Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  linkHub   LinkHub     @relation(fields: [linkHubId], references: [id], onDelete: Cascade)

  @@map("links")
}
